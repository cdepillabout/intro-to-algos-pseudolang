cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.33.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 707786e29b9835e1e53f62ae720d01f150475d3af00c992d59890e60daa27e24

name:           pseudolang
version:        0.1.0.0
description:    Please see the README on GitHub at <https://github.com/githubuser/pseudolang#readme>
homepage:       https://github.com/githubuser/pseudolang#readme
bug-reports:    https://github.com/githubuser/pseudolang/issues
author:         Author name here
maintainer:     example@example.com
copyright:      2021 Author name here
license:        BSD3
license-file:   LICENSE
build-type:     Custom
extra-source-files:
    README.md
    ChangeLog.md

custom-setup
  setup-depends: base
               , Cabal
               , cabal-doctest >=1.0.2 && <1.1

source-repository head
  type: git
  location: https://github.com/githubuser/pseudolang

library
  hs-source-dirs: src
  exposed-modules:
    Pseudolang.ASTBuilder
    Pseudolang.ASTBuilderNG
    Pseudolang.Interpreter
    Pseudolang.Interpreter.Real
    Pseudolang.Interpreter.Test
    Pseudolang.Lexer
    Pseudolang.LexerNG
    Pseudolang.Main
    Pseudolang.Parser
    Pseudolang.ParserNG
    Pseudolang.Prelude
  other-modules:
    Paths_pseudolang
  build-depends:
      base >=4.7 && <5
    , classy-prelude
    , containers
    , megaparsec
    , mtl
    , optparse-applicative
    , parser-combinators
    , pretty-simple
    , random
    , vector
  ghc-options:
    -Wall -Wincomplete-record-updates -Wincomplete-uni-patterns -Wno-unused-imports -Wno-unused-top-binds -O2
  default-extensions:
    BangPatterns
    BinaryLiterals
    BlockArguments
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DerivingStrategies
    DoAndIfThenElse
    EmptyCase
    EmptyDataDecls
    ExistentialQuantification
    ExplicitNamespaces
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    NoImplicitPrelude
    OverloadedStrings
    PartialTypeSignatures
    PatternGuards
    PolyKinds
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeFamilies
    TypeSynonymInstances
    ViewPatterns
  default-language: Haskell2010

executable pseudo
  main-is: Main.hs
  other-modules:
    Paths_pseudolang
  hs-source-dirs: app
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base >=4.7 && <5
    , pseudolang
  default-language: Haskell2010

test-suite pseudolang-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  hs-source-dirs: test
  other-modules:
    Paths_pseudolang
    Test.Pseudolang.Golden
    Test.Pseudolang.InterpreterTest
    Test.Pseudolang.LexerTest
    Test.Pseudolang.ParserTest
    Test.Pseudolang.ParserNGTest
    Test.Pseudolang.Utils
  build-depends:
      base >=4.7 && <5
    , directory
    , filepath
    , haskell-src-exts
    , haskell-src-meta
    , hspec
    , megaparsec
    , pretty-simple
    , pseudolang
    , split
    , string-interpolate
    , vector
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  default-extensions:
    BangPatterns
    BinaryLiterals
    BlockArguments
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DerivingStrategies
    DoAndIfThenElse
    EmptyCase
    EmptyDataDecls
    ExistentialQuantification
    ExplicitNamespaces
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    NoImplicitPrelude
    OverloadedStrings
    PartialTypeSignatures
    PatternGuards
    PolyKinds
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeFamilies
    TypeSynonymInstances
    ViewPatterns
  default-language: Haskell2010

test-suite pseudolang-doctest
  type:                exitcode-stdio-1.0
  main-is:             DocTest.hs
  hs-source-dirs:      test
  build-depends:       base
                     , base-compat       >=0.10.5
                     , doctest           >=0.15
                     , QuickCheck        >=2.12
                     , pseudolang
                     , template-haskell
  default-language:    Haskell2010
  ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N
